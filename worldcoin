import { CredentialType, IDKitWidget, ISuccessResult } from "@worldcoin/idkit";
import { ethers } from "ethers";


function App() {
    const handleProof = (result: ISuccessResult) => {
        return new Promise<void>((resolve) => {
            setTimeout(() => resolve(), 3000);
            // NOTE: Example of how to decline the verification request and show an error message to the user
        });
    };

    const onSuccess = (result: ISuccessResult) => {
        console.log(result);
        console.log(ethers.utils.defaultAbiCoder.decode(['uint256[8]'], result.proof)[0]);
    };

    const urlParams = new URLSearchParams(window.location.search);
    const credential_types = (urlParams.get("credential_types")?.split(",") as CredentialType[]) ?? [
        CredentialType.Orb,
        CredentialType.Phone,
    ];

    const action = urlParams.get("action") ?? "add-an-advertisement";
    const app_id = urlParams.get("app_id") ?? "app_staging_2471afe880064bffd14ddd031ce07017";

    return (
        <div
            className="App"
            style={{
                minHeight: "100vh",
                display: "flex",
                justifyContent: "center",
                alignItems: "center",
            }}
        >
            <IDKitWidget
                action={action}
                signal="0x52EAF3F04cbac0a4B9878A75AB2523722325D4D4"
                onSuccess={onSuccess}
                handleVerify={handleProof}
                app_id={app_id}
                credential_types={credential_types}
                // walletConnectProjectId="get_this_from_walletconnect_portal"
            >
                {({ open }) => <button onClick={open}>Click me</button>}
            </IDKitWidget>
        </div>
    );
}

export default App;